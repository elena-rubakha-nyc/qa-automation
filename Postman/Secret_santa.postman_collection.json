{
	"info": {
		"_postman_id": "fd8da00e-7dd7-4bdb-bfb1-abe23cc3623f",
		"name": "Secret santa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13894786"
	},
	"item": [
		{
			"name": "API status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{santaUrl}}",
					"host": [
						"{{santaUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register a client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.text()",
							"",
							"pm.test ('Verify that status = OK', () => {",
							"    pm.expect(response).to.eql('OK')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"testhello@example.com\", \n    \"username\": \"test test\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}register",
					"host": [
						"{{santaUrl}}register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"console.log(response)",
							"",
							"pm.test (\"Verify User ID\", () => {",
							"    pm.expect(response[\"id\"]).to.eql(3001452)",
							"})",
							"",
							"pm.test (\"Verify that Account type is email\", () => {",
							"    pm.expect(response[\"accountType\"]).to.eql(\"email\")",
							"})",
							"",
							"pm.test (\"Verify username\", () => {",
							"    pm.expect(response[\"username\"]).to.eql(\"elena \")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "test123!",
							"type": "string"
						},
						{
							"key": "username",
							"value": "elena.rubakha.nyc@gmail.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"elena.rubakha.nyc@gmail.com\", \n    \"password\": \"{{pwd}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}login",
					"host": [
						"{{santaUrl}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"const response = pm.response.json()",
							"console.log(response)",
							"",
							"pm.test (\"Verify User ID\", () => {",
							"    pm.expect(response.error[\"message\"]).to.eql(\"USER_NOT_FOUND\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "test123!",
							"type": "string"
						},
						{
							"key": "username",
							"value": "elena.rubakha.nyc@gmail.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"elena.rubakha.559@gmail.com\", \n    \"password\": \"{{pwd}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}login",
					"host": [
						"{{santaUrl}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const requestData = JSON.parse(request.data)",
							"console.log(requestData)",
							"",
							"pm.environment.set(\"pwd\", requestData.password)",
							"",
							"const response = pm.response.json()",
							"console.log(response)",
							"",
							"pm.test (\"Verify User ID\", () => {",
							"    pm.expect(response[\"id\"]).to.eql(3001452)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"{{$randomPassword}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}account/password",
					"host": [
						"{{santaUrl}}account"
					],
					"path": [
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a box > create with name=null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": null,\n    \"name\": null,\n    \"key\": \"{{$randomInt}}\",\n    \"picture\": \"house_one\",\n    \"usePost\": false,\n    \"useCashLimit\": null,\n    \"cashLimit\": null,\n    \"cashLimitCurrency\": null,\n    \"useWish\": true,\n    \"useCircleDraw\": null,\n    \"isInviteAfterDraw\": null,\n    \"isArchived\": null,\n    \"createAdminCard\": null,\n    \"isCreated\": true,\n    \"useNames\": true,\n    \"isPhoneRequired\": false,\n    \"logo\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}box",
					"host": [
						"{{santaUrl}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a box > happy path",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.environment.set(\"boxId\", response.box.key)",
							"",
							"",
							"pm.test (\"Verify that picture = house_one\", () => {",
							"    pm.expect(response.box[\"picture\"]).to.eql(\"house_one\")",
							"})",
							"",
							"pm.test (\"Verify that name = elena\", () => {",
							"    pm.expect(response.box[\"name\"]).to.eql(\"elena\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": null,\n    \"name\": \"elena\",\n    \"key\": \"{{$randomInt}}\",\n    \"picture\": \"house_one\",\n    \"usePost\": false,\n    \"useCashLimit\": null,\n    \"cashLimit\": null,\n    \"cashLimitCurrency\": null,\n    \"useWish\": true,\n    \"useCircleDraw\": null,\n    \"isInviteAfterDraw\": null,\n    \"isArchived\": null,\n    \"createAdminCard\": null,\n    \"isCreated\": true,\n    \"useNames\": true,\n    \"isPhoneRequired\": false,\n    \"logo\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}box",
					"host": [
						"{{santaUrl}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit a box",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.environment.set(\"NewBoxName\", response.box.name)",
							"",
							"pm.test (\"Verify name update\", () => {",
							"    pm.expect(response.box[\"name\"]).to.eql(pm.environment.get(\"NewBoxName\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": null,\n    \"name\": \"{{$randomUserName}}\",\n    \"key\": \"{{boxId}}\",\n    \"picture\": \"house_one\",\n    \"usePost\": false,\n    \"useCashLimit\": null,\n    \"cashLimit\": null,\n    \"cashLimitCurrency\": null,\n    \"useWish\": true,\n    \"useCircleDraw\": null,\n    \"isInviteAfterDraw\": null,\n    \"isArchived\": null,\n    \"createAdminCard\": null,\n    \"isCreated\": true,\n    \"useNames\": true,\n    \"isPhoneRequired\": false,\n    \"logo\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}box",
					"host": [
						"{{santaUrl}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a box",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{santaUrl}}box/{{boxId}}",
					"host": [
						"{{santaUrl}}box"
					],
					"path": [
						"{{boxId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "santaUrl",
			"value": "https://staging.lpitko.ru/api/"
		},
		{
			"key": "pwd",
			"value": "test123",
			"type": "string"
		}
	]
}